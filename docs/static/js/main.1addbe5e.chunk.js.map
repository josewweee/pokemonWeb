{"version":3,"sources":["components/banner/Banner.js","redux/actions/fetchActions.js","components/navBar/NavBar.js","components/pokemon/Pokemon.js","redux/actions/modalActions.js","components/pokemons-list/PokemonList.js","redux/reducers/modalReducer.js","redux/reducers/pokemonsReducer.js","redux/reducers/index.js","redux/store.js","components/pokemon-modal/modal-body/modal-body-comparing/ModalBodyComparing.js","components/pokemon-modal/modal-body/modal-body-pokemon/ModalBodyPokemon.js","components/pokemon-modal/modal-footer/ModalFooter.js","components/pokemon-modal/modal-header/ModalHeader.js","components/pokemon-modal/PokemonModal.js","components/overlay/UseOverlay.js","App.js","index.js","components/banner/banner.module.css"],"names":["Banner","className","styles","banner","title","fetchPokemons","id","dispatch","a","imageBaseEndPoint","fetch","rawPokemonsPageList","json","results","forEach","result","rawPokemonImage","blob","pokemonImage","pokemonReady","name","image","URL","createObjectURL","url","type","payload","pokemon","error","connect","state","StartToquery","query","queryPokemons","cancelQuery","props","inputRef","React","createRef","useState","cancelButtonVisibility","setCancelButtonVisibility","placeholder","ref","onChange","event","target","value","onClick","current","openModal","pokemonData","pokemonInfo","species","speciesRawData","speciesData","englishText","flavor_text_entries","find","item","language","flavor_text","description","gender_rate","gender","comparedPokemon","data","src","alt","nextPage","pokemonActualIndex","pokemons","index","modalController","isComparing","Container","Row","map","Col","xs","sm","md","lg","key","loadMore","hasMore","loader","initialLoad","threshold","initialState","modalVisible","actions","isFetching","filter","includes","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","StatsComparatingComponent","stat","measure","ModalBodyComparing","sprites","front_default","abilities","ability","ModalBodyPokemon","height","weight","types","GraphsMaker","dataSet","fistPokemonStats","stats","base_stat","comparedStats","width","margin","top","right","bottom","left","dataKey","barSize","fill","ModalPokemonFooter","ModalHeaderPokemon","comparePokemons","closeModal","ModalHeaderComparing","ReactDOM","createPortal","ModalFooter","document","getElementById","overlayState","setOverlayState","useEffect","App","NavBar","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.1addbe5e.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './banner.module.css';\n\nconst Banner = () => {\n  return (\n    <div className={styles.banner}>\n      <h1 className={styles.title}>Welcome to Poke App</h1>\n    </div>\n  );\n};\n\nexport default Banner;\n","export const FETCH_SUCCESS = 'FETCH_SUCCESS';\nexport const FETCH_ERROR = 'FETCH_ERROR';\nexport const QUERY_POKEMONS = 'QUERY_POKEMONS';\nexport const CANCEL_QUERY = 'CANCEL_QUERY';\nexport const INCREASE_ID = 'INCREASE_ID';\n\nexport const fetchPokemons = (id) => async (dispatch) => {\n  const imageBaseEndPoint = 'https://raw.githubusercontent.com/PokeAPI/sprites/146c91287ad01f6e15315bbd733fd7442c91fe6d/sprites/pokemon/';\n  try {\n    const rawPokemonsPageList = await fetch(`https://pokeapi.co/api/v2/pokemon/?limit=20&offset=${id}`);\n    const jsonPokemonsPageList = await rawPokemonsPageList.json();\n\n    jsonPokemonsPageList.results.forEach(async (result) => {\n      id = id + 1;\n      const rawPokemonImage = await fetch(`${imageBaseEndPoint}${id}.png`);\n      const pokemonImage = await rawPokemonImage.blob();\n      const pokemonReady = {\n        name: result.name,\n        image: URL.createObjectURL(pokemonImage),\n        url: result.url,\n      };\n      dispatch({\n        type: FETCH_SUCCESS,\n        payload: {\n          pokemon: pokemonReady,\n        },\n      });\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_ERROR,\n      error: error,\n    });\n  }\n};\n\nexport const increasePokemonId = () => {\n  return {\n    type: INCREASE_ID,\n  };\n};\n\nexport const queryPokemons = (query) => {\n  return {\n    type: QUERY_POKEMONS,\n    payload: {\n      query,\n    },\n  };\n};\n\nexport const cancelQuery = () => {\n  return {\n    type: CANCEL_QUERY,\n  };\n};\n","import React, { useState } from 'react';\nimport './styles.css';\nimport { connect } from 'react-redux';\nimport { queryPokemons, cancelQuery } from '../../redux/actions/fetchActions';\n\nconst UseNavBar = (props) => {\n  let inputRef = React.createRef();\n\n  const [cancelButtonVisibility, setCancelButtonVisibility] = useState('query-button hidden');\n\n  const handleSearchBar = (event) => {\n    if (event.target.value === '') {\n      setCancelButtonVisibility('query-button hidden');\n      props.cancelQuery();\n      return;\n    }\n    setCancelButtonVisibility('query-button');\n    props.StartToquery(event.target.value);\n  };\n\n  const cleanQueryAndResetList = () => {\n    inputRef.current.value = '';\n    setCancelButtonVisibility('query-button hidden');\n    props.cancelQuery();\n  };\n\n  return (\n    <div className=\"navbar-custom\">\n      <div className=\"titles\">\n        <span className=\"main\">PokéApp</span>\n        <p className=\"description\">Pokemons</p>\n        <span className=\"items-section\">Items</span>\n      </div>\n      <div className=\"query-container\">\n        <input type=\"text\" placeholder=\"Search\" ref={inputRef} className=\"query-bar\" onChange={handleSearchBar} />\n        <button onClick={cleanQueryAndResetList} className={cancelButtonVisibility}>\n          X\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    StartToquery: (query) => dispatch(queryPokemons(query)),\n    cancelQuery: () => dispatch(cancelQuery()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UseNavBar);\n","import React from 'react';\nimport './styles.css';\nimport { connect } from 'react-redux';\nimport { openModal } from '../../redux/actions/modalActions';\n\nconst Pokemon = (props) => {\n  const checkPokemonData = () => {\n    props.openModal(props.data);\n  };\n\n  return (\n    <div className=\"custom-card card\" onClick={checkPokemonData}>\n      <img src={props.data.image} alt=\"imagen pokemon\" className=\"card-img\" />\n      <div className=\"card-name--container\">\n        <p className=\"card-name\">{props.data.name}</p>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    openModal: (pokemonData) => dispatch(openModal(pokemonData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pokemon);\n","export const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\nexport const COMPARE = 'COMPARE';\n\nexport const openModal = (pokemonData) => async (dispatch) => {\n  let pokemonReady = {};\n\n  const pokemonInfo = await fetch(pokemonData.url);\n  pokemonReady = await pokemonInfo.json();\n\n  const speciesRawData = await fetch(pokemonReady.species.url);\n  const speciesData = await speciesRawData.json();\n\n  let englishText = speciesData.flavor_text_entries.find((item) => item.language.name === 'en').flavor_text;\n  pokemonReady.description = englishText;\n  if (speciesData.gender_rate === -1) {\n    pokemonReady.gender = 'Genderless';\n  } else if (speciesData.gender_rate >= 4) {\n    pokemonReady.gender = 'Female';\n  } else {\n    pokemonReady.gender = 'Male';\n  }\n\n  dispatch({\n    type: OPEN_MODAL,\n    payload: {\n      pokemonData: pokemonReady,\n      comparedPokemon: pokemonReady,\n    },\n  });\n};\n\nexport const closeModal = () => {\n  return {\n    type: CLOSE_MODAL,\n  };\n};\n\nexport const compare = () => {\n  return {\n    type: COMPARE,\n  };\n};\n","import React from 'react';\nimport Pokemon from '../pokemon/Pokemon';\nimport { connect } from 'react-redux';\nimport { fetchPokemons, increasePokemonId } from '../../redux/actions/fetchActions';\nimport Col from 'react-bootstrap/col';\nimport { Row, Container } from 'react-bootstrap';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport './styles.css';\n\nconst PokemonList = (props) => {\n  let pokemonActualIndex = props.pokemons.index;\n\n  const loadMorePokemons = () => {\n    props.fetch(pokemonActualIndex);\n    props.nextPage();\n  };\n\n  return (\n    <div className=\"pokemons-list\">\n      <div className={props.modalController.isComparing ? 'card-alert-container' : 'hiden'}>\n        <div className=\"card\">\n          <div className=\"card-header--alert\">\n            <span>Comparing pokemon</span>\n          </div>\n          <div className=\"card-body--alert\">\n            <strong>\n              <span>{props.modalController.pokemonData && props.modalController.pokemonData.name}</span>\n            </strong>\n          </div>\n        </div>\n      </div>\n      <Container className=\"pokemons-container\">\n        {props.pokemons.queryPokemons !== null ? (\n          <Row>\n            {props.pokemons.queryPokemons.map((pokemon) => (\n              <Col xs={6} sm={3} md={3} lg={3} key={pokemon.id}>\n                <Pokemon data={pokemon} />\n              </Col>\n            ))}\n          </Row>\n        ) : (\n          <InfiniteScroll\n            loadMore={loadMorePokemons}\n            hasMore={true || false}\n            loader={\n              <div className=\"loader\" key={0}>\n                Loading ...\n              </div>\n            }\n            initialLoad={false}\n            threshold={20}\n          >\n            <Row>\n              {props.pokemons.pokemons.map((pokemon, index) => (\n                <Col xs={6} sm={3} md={3} lg={2} key={index}>\n                  <Pokemon data={pokemon} />\n                </Col>\n              ))}\n            </Row>\n          </InfiniteScroll>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetch: (id) => dispatch(fetchPokemons(id)),\n    nextPage: () => dispatch(increasePokemonId()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonList);\n","import { OPEN_MODAL, CLOSE_MODAL, COMPARE } from '../actions/modalActions';\n\nconst initialState = {\n  modalVisible: false,\n  pokemonData: null,\n  isComparing: false,\n  comparedPokemon: null,\n};\n\nfunction modalController(state = initialState, actions) {\n  switch (actions.type) {\n    case OPEN_MODAL:\n      return {\n        ...state,\n        modalVisible: true,\n        pokemonData: state.isComparing ? state.pokemonData : actions.payload.pokemonData,\n        comparedPokemon: state.isComparing ? actions.payload.comparedPokemon : null,\n      };\n    case CLOSE_MODAL:\n      return {\n        ...state,\n        modalVisible: false,\n        comparedPokemon: null,\n        isComparing: false,\n      };\n    case COMPARE:\n      return {\n        ...state,\n        modalVisible: false,\n        isComparing: true,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default modalController;\n","import { FETCH_SUCCESS, FETCH_ERROR, QUERY_POKEMONS, CANCEL_QUERY, INCREASE_ID } from '../actions/fetchActions';\n\nconst initialState = {\n  pokemons: [],\n  queryPokemons: null,\n  isFetching: false,\n  error: null,\n  index: 0,\n};\n\nconst pokemons = (state = initialState, actions) => {\n  switch (actions.type) {\n    case FETCH_SUCCESS:\n      return {\n        ...state,\n        pokemons: [...state.pokemons, actions.payload.pokemon],\n        isFetching: false,\n      };\n    case INCREASE_ID:\n      return {\n        ...state,\n        index: state.index + 20,\n      };\n    case QUERY_POKEMONS:\n      return {\n        ...state,\n        queryPokemons: [...state.pokemons.filter((pokemon) => pokemon.name.includes(actions.payload.query))],\n      };\n    case CANCEL_QUERY:\n      return {\n        ...state,\n        pokemons: [...state.pokemons],\n        queryPokemons: null,\n      };\n    case FETCH_ERROR:\n      return {\n        ...state,\n        error: actions.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default pokemons;\n","import { combineReducers } from 'redux';\nimport modalController from './modalReducer';\nimport pokemons from './pokemonsReducer';\n\nexport default combineReducers({\n  modalController,\n  pokemons,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport Col from 'react-bootstrap/col';\nimport { Row } from 'react-bootstrap';\nimport './style.css';\n\nconst StatsComparatingComponent = ({ data, stat, measure }) => (\n  <div className=\"body-comparing--description\">\n    <Col xs={4}>\n      <p className=\"body-data\">{`${data.pokemonData[stat]}${measure}`}</p>\n    </Col>\n    <Col xs={4}>\n      <p className=\"body-title\">{stat}</p>\n    </Col>\n    <Col xs={4}>\n      <p className=\"body-data\">{`${data.comparedPokemon[stat]}${measure}`}</p>\n    </Col>\n  </div>\n);\n\nconst ModalBodyComparing = ({ data }) => (\n  <div>\n    <Row>\n      <div className=\"body-comparing--img\">\n        <Col xs={6}>\n          <img src={data.pokemonData.sprites.front_default} alt={data.pokemonData.name}></img>\n        </Col>\n        <Col xs={6}>\n          <img src={data.comparedPokemon.sprites.front_default} alt={data.comparedPokemon.name}></img>\n        </Col>\n      </div>\n    </Row>\n    <Row>\n      <Col xs={12}>\n        <div className=\"body-comparing-texts--container\">\n          <hr />\n          <StatsComparatingComponent data={data} stat={'height'} measure={'m'} />\n          <StatsComparatingComponent data={data} stat={'weight'} measure={'kg'} />\n          <StatsComparatingComponent data={data} stat={'gender'} measure={''} />\n\n          <div className=\"body-comparing--description\">\n            <Col xs={4} className=\"container-padding-left-0\">\n              <ul className=\"body-comparing-list\">\n                {data.pokemonData.abilities.map((ability) => (\n                  <li className=\"body-comparing-list--item\" key={ability.ability.name}>\n                    {ability.ability.name}\n                  </li>\n                ))}\n              </ul>\n            </Col>\n            <Col xs={4}>\n              <p className=\"body-title\">Abilities</p>\n            </Col>\n            <Col xs={4}>\n              <ul className=\"body-comparing-list container-padding-left-0\">\n                {data.comparedPokemon.abilities.map((ability) => (\n                  <li className=\"body-comparing-list--item\" key={ability.ability.name}>\n                    {ability.ability.name}\n                  </li>\n                ))}\n              </ul>\n            </Col>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default ModalBodyComparing;\n","import React from 'react';\n\nimport Col from 'react-bootstrap/col';\nimport { Row } from 'react-bootstrap';\n\nimport './style.css';\n\nexport const ModalBodyPokemon = ({ data }) => (\n  <Row className=\"row-container\">\n    <Col xs={4}>\n      <img className=\"body-img\" src={data.pokemonData.sprites.front_default} alt={data.pokemonData.name}></img>\n    </Col>\n    <Col xs={8} className=\"body-text-container\">\n      <div>\n        <Row>\n          <p className=\"body-description\">{data.pokemonData.description}</p>\n        </Row>\n        <hr className=\"separator body-separator\" />\n        <Row>\n          <Col className=\"body-text-container--item\">\n            <p className=\"body-title\">Height</p>\n            <p>{`${data.pokemonData.height}m`}</p>\n          </Col>\n          <Col className=\"body-text-container--item\">\n            <p className=\"body-title\">Weight</p>\n            <p>{`${data.pokemonData.weight}kg`}</p>\n          </Col>\n          <Col className=\"body-text-container--item\">\n            <p className=\"body-title\">Gender</p>\n            <p>{data.pokemonData.gender}</p>\n          </Col>\n        </Row>\n        <Row className=\"body-list-items\">\n          <Col className=\"body-text-container--item\">\n            <p className=\"body-title\">Abilities</p>\n            <section>\n              <ul className=\"body-text-container--item-list\">\n                {data.pokemonData.abilities.map((ability) => (\n                  <li key={ability.ability.name}>{ability.ability.name}</li>\n                ))}\n              </ul>\n            </section>\n          </Col>\n          <Col className=\"body-text-container--item\">\n            <p className=\"body-title\">Types</p>\n            <section>\n              <ul className=\"body-text-container--item-list\">\n                {data.pokemonData.types.map((type) => (\n                  <li key={type.type.name}>{type.type.name}</li>\n                ))}\n              </ul>\n            </section>\n          </Col>\n        </Row>\n      </div>\n    </Col>\n  </Row>\n);\n\nexport default ModalBodyPokemon;\n","import React from 'react';\nimport { Row } from 'react-bootstrap';\nimport { XAxis, YAxis, BarChart, Bar } from 'recharts';\n\nimport './style.css';\n\nconst GraphsMaker = ({ data }) => {\n  const fistPokemonStats = data.pokemonData.stats.map((stat) => stat.base_stat);\n  const comparedStats = data.comparedPokemon ? data.comparedPokemon.stats.map((stat) => stat.base_stat) : null;\n  let dataSet;\n\n  if (comparedStats !== null) {\n    dataSet = [\n      { name: 'hp', pokemonData: fistPokemonStats[0], comparedPokemon: comparedStats[0] },\n      { name: 'attack', pokemonData: fistPokemonStats[1], comparedPokemon: comparedStats[1] },\n      { name: '', pokemonData: fistPokemonStats[2], comparedPokemon: comparedStats[2] },\n      { name: 'special', pokemonData: fistPokemonStats[3], comparedPokemon: comparedStats[3] },\n      { name: '', pokemonData: fistPokemonStats[4], comparedPokemon: comparedStats[4] },\n      { name: 'speed', pokemonData: fistPokemonStats[5], comparedPokemon: comparedStats[5] },\n    ];\n  } else {\n    dataSet = [\n      { name: 'hp', pokemonData: fistPokemonStats[0] },\n      { name: 'attack', pokemonData: fistPokemonStats[1] },\n      { name: '', pokemonData: fistPokemonStats[2] },\n      { name: 'special', pokemonData: fistPokemonStats[3] },\n      { name: '', pokemonData: fistPokemonStats[4] },\n      { name: 'speed', pokemonData: fistPokemonStats[5] },\n    ];\n  }\n\n  return (\n    <BarChart width={350} height={200} data={dataSet} margin={{ top: 0, right: 25, bottom: 0, left: 0 }} className=\"stats-chart\">\n      <Bar dataKey=\"pokemonData\" barSize={35} fill=\"#096700\" />\n\n      {comparedStats !== null && <Bar dataKey=\"comparedPokemon\" barSize={35} fill=\"#12d400\" />}\n\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n    </BarChart>\n  );\n};\n\nconst ModalPokemonFooter = ({ data }) => (\n  <div>\n    <Row className=\"row-footer\">\n      <h4 className=\"footer-title\">Stats</h4>\n    </Row>\n    <Row className=\"row-footer\">\n      <GraphsMaker data={data} />\n    </Row>\n  </div>\n);\n\nexport default ModalPokemonFooter;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { closeModal, compare } from '../../../redux/actions/modalActions';\n\nimport './style.css';\n\nconst ModalHeaderPokemon = ({ props }) => {\n  const data = props.modalController;\n\n  const handleCloseModal = () => {\n    props.closeModal();\n  };\n\n  const handleCompare = () => {\n    props.comparePokemons();\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"header--texts\">\n        <h6 className=\"header-texts--name\">{data.pokemonData.name}</h6>\n        <button onClick={handleCompare} className=\"header-texts--compare\">\n          Compare To...\n        </button>\n      </div>\n      <button onClick={handleCloseModal} className=\"header--close\">\n        X\n      </button>\n    </div>\n  );\n};\n\nconst ModalHeaderComparing = ({ props }) => {\n  const data = props.modalController;\n\n  const handleCloseModal = () => {\n    props.closeModal();\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"header--texts\">\n        <h6 className=\"header-texts--name\">{data.pokemonData.name} VS.</h6>\n        <h6 className=\"header-texts--name\">{data.comparedPokemon.name}</h6>\n      </div>\n      <button onClick={handleCloseModal} className=\"header--close\">\n        X\n      </button>\n    </div>\n  );\n};\n\nconst ModalHeader = (props) => <div>{!props.modalController.isComparing ? <ModalHeaderPokemon props={props} /> : <ModalHeaderComparing props={props} />}</div>;\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    closeModal: (pokemonData) => dispatch(closeModal(pokemonData)),\n    comparePokemons: () => dispatch(compare()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalHeader);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { Row } from 'react-bootstrap';\nimport ModalBodyComparing from './modal-body/modal-body-comparing';\nimport ModalBodyPokemon from './modal-body/modal-body-pokemon';\nimport ModalFooter from './modal-footer';\nimport ModalHeader from './modal-header';\n\nimport './style.css';\n\nconst PokemonModal = (props) => {\n  if (!props.modalController.modalVisible) {\n    return null;\n  } else\n    return ReactDOM.createPortal(\n      <div className=\"root-modal\">\n        <ModalHeader />\n        <hr className=\"separator separator-lg\" />\n\n        <Row>\n          <div className=\"body\">\n            {!props.modalController.isComparing ? <ModalBodyPokemon data={props.modalController} /> : <ModalBodyComparing data={props.modalController} />}\n\n            <hr className=\"separator separator-sm\" />\n          </div>\n        </Row>\n\n        <Row>\n          <div className=\"footer\">\n            <ModalFooter data={props.modalController} />\n          </div>\n        </Row>\n      </div>,\n      document.getElementById('modal-root')\n    );\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nexport default connect(mapStateToProps)(PokemonModal);\n","import React, { useEffect, useState } from 'react';\nimport './styles.css';\nimport { connect } from 'react-redux';\n\nconst UseOverlay = (props) => {\n  const [overlayState, setOverlayState] = useState('hidden');\n\n  useEffect(() => {\n    if (props.modalController.modalVisible) {\n      setOverlayState('open');\n    } else {\n      setOverlayState('hidden');\n    }\n\n    return () => {};\n  }, [props.modalController.modalVisible]);\n\n  return <div className={`overlay ${overlayState}`}></div>;\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UseOverlay);\n","import React from 'react';\nimport './App.css';\nimport Banner from './components/banner';\nimport NavBar from './components/navBar';\nimport PokemonList from './components/pokemons-list';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport PokemonModal from './components/pokemon-modal/PokemonModal';\nimport UseOverlay from './components/overlay';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <UseOverlay />\n        <Banner />\n        <NavBar />\n        <PokemonModal />\n        <PokemonList />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"banner_banner__-R6DW\",\"title\":\"banner_title__3brMb\"};"],"sourceRoot":""}