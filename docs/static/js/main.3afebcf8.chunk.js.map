{"version":3,"sources":["components/banner/Banner.js","redux/actions/fetchActions.js","components/navBar/NavBar.js","components/pokemon/Pokemon.js","redux/actions/modalActions.js","components/pokemons-list/PokemonList.js","redux/reducers/modalReducer.js","redux/reducers/pokemonsReducer.js","redux/reducers/index.js","redux/store.js","components/pokemon-modal/modal-body/ModalBody.js","components/pokemon-modal/modal-footer/ModalFooter.js","components/pokemon-modal/modal-header/ModalHeader.js","components/pokemon-modal/PokemonModal.js","components/overlay/UseOverlay.js","App.js","index.js","components/banner/banner.module.css"],"names":["Banner","className","styles","banner","title","fetchPokemons","id","dispatch","a","pokemonReady","fetch","rawPokemonsPageList","json","results","forEach","result","url","rawIndividualPokemonData","individualPokemonData","species","speciesRawData","speciesData","englishText","flavor_text_entries","find","item","language","name","flavor_text","description","gender_rate","gender","type","payload","pokemon","error","connect","state","StartToquery","query","queryPokemons","cancelQuery","props","inputRef","React","createRef","useState","cancelButtonVisibility","setCancelButtonVisibility","placeholder","ref","onChange","event","target","value","onClick","current","openModal","pokemonData","comparedPokemon","data","src","sprites","front_default","alt","nextPage","pokemons","index","cardAlertDisplay","modalController","isComparing","Container","Row","map","Col","xs","sm","md","lg","key","loadMore","hasMore","loader","initialLoad","threshold","initialState","modalVisible","actions","isFetching","filter","includes","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","ModalBodyPokemon","height","weight","abilities","ability","types","ModalBodyComparing","GraphsMaker","dataSet","fistPokemonStats","stats","stat","base_stat","comparedStats","width","margin","top","right","bottom","left","dataKey","barSize","fill","ModalPokemonFooter","ModalHeaderPokemon","comparePokemons","closeModal","ModalHeaderComparing","ReactDOM","createPortal","ModalFooter","document","getElementById","overlayState","setOverlayState","useEffect","App","NavBar","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.3afebcf8.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from \"./banner.module.css\";\n\nconst Banner = () => {\n  return (\n    <div className={styles.banner}>\n      <h1 className={styles.title}>Welcome to Poke App</h1>\n    </div>\n  );\n};\n\nexport default Banner;\n","export const FETCH_SUCCESS = \"FETCH_SUCCESS\";\nexport const FETCH_ERROR = \"FETCH_ERROR\";\nexport const QUERY_POKEMONS = \"QUERY_POKEMONS\";\nexport const CANCEL_QUERY = \"CANCEL_QUERY\";\nexport const INCREASE_ID = \"INCREASE_ID\";\n\n//fetch the pokemons\nexport const fetchPokemons = (id) => async (dispatch) => {\n  //object to store our new fetched pokemon\n  let pokemonReady = {};\n  //initial list\n  try {\n    const rawPokemonsPageList = await fetch(`https://pokeapi.co/api/v2/pokemon/?limit=20&offset=${id}`);\n    const jsonPokemonsPageList = await rawPokemonsPageList.json();\n    //each pokemon\n    jsonPokemonsPageList.results.forEach(async (result) => {\n      const rawIndividualPokemonData = await fetch(result.url);\n      const individualPokemonData = await rawIndividualPokemonData.json();\n      //pokemon aditional data\n      const speciesRawData = await fetch(individualPokemonData.species.url);\n      const speciesData = await speciesRawData.json();\n      pokemonReady = individualPokemonData;\n      //description\n      let englishText = speciesData.flavor_text_entries.find((item) => item.language.name === \"en\").flavor_text;\n      pokemonReady.description = englishText;\n      //gender formula according to de api docs\n      if (speciesData.gender_rate === -1) pokemonReady.gender = \"Genderless\";\n      else if (speciesData.gender_rate >= 4) pokemonReady.gender = \"Female\";\n      else pokemonReady.gender = \"Male\";\n      //send it to the reducer\n      dispatch({\n        type: FETCH_SUCCESS,\n        payload: {\n          pokemon: pokemonReady,\n        },\n      });\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_ERROR,\n      error: error,\n    });\n  }\n};\n\n//increase +20 to the offset, thats a next page in the api\nexport const increasePokemonId = () => {\n  return {\n    type: INCREASE_ID,\n  };\n};\n\n//search pokemons in the already loaded ones\nexport const queryPokemons = (query) => {\n  return {\n    type: QUERY_POKEMONS,\n    payload: {\n      query,\n    },\n  };\n};\n\n//go back to the old state (loaded pokemons)\nexport const cancelQuery = () => {\n  return {\n    type: CANCEL_QUERY,\n  };\n};\n","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport { queryPokemons, cancelQuery } from \"../../redux/actions/fetchActions\";\n\nconst UseNavBar = (props) => {\n  let inputRef = React.createRef();\n\n  const [cancelButtonVisibility, setCancelButtonVisibility] = useState(\"query-button hidden\");\n\n  const handleSearchBar = (event) => {\n    if (event.target.value === \"\") {\n      setCancelButtonVisibility(\"query-button hidden\");\n      props.cancelQuery();\n      return;\n    }\n    setCancelButtonVisibility(\"query-button\");\n    props.StartToquery(event.target.value);\n  };\n\n  const cleanQueryAndResetList = () => {\n    inputRef.current.value = \"\";\n    setCancelButtonVisibility(\"query-button hidden\");\n    props.cancelQuery();\n  };\n\n  return (\n    <div className=\"navbar-custom\">\n      <div className=\"titles\">\n        <span className=\"main\">PokéApp</span>\n        <p className=\"description\">Pokemons</p>\n        <span className=\"items-section\">Items</span>\n      </div>\n      <div className=\"query-container\">\n        <input type=\"text\" placeholder=\"Search\" ref={inputRef} className=\"query-bar\" onChange={handleSearchBar} />\n        <button onClick={cleanQueryAndResetList} className={cancelButtonVisibility}>\n          X\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    StartToquery: (query) => dispatch(queryPokemons(query)),\n    cancelQuery: () => dispatch(cancelQuery()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UseNavBar);\n","import React from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport { openModal } from \"../../redux/actions/modalActions\";\n\nconst Pokemon = (props) => {\n  const checkPokemonData = () => {\n    props.openModal(props.data);\n  };\n\n  return (\n    <div className=\"custom-card card\" onClick={checkPokemonData}>\n      <img src={props.data.sprites.front_default} alt=\"imagen pokemon\" className=\"card-img\" />\n      <div className=\"card-name--container\">\n        <p className=\"card-name\">{props.data.name}</p>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    openModal: (pokemonData) => dispatch(openModal(pokemonData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pokemon);\n","export const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\nexport const COMPARE = \"COMPARE\";\n\nexport const openModal = (pokemonData) => {\n  return {\n    type: OPEN_MODAL,\n    payload: {\n      pokemonData,\n      comparedPokemon: pokemonData,\n    },\n  };\n};\n\nexport const closeModal = () => {\n  return {\n    type: CLOSE_MODAL,\n  };\n};\n\nexport const compare = () => {\n  return {\n    type: COMPARE,\n  };\n};\n","import React from \"react\";\nimport Pokemon from \"../pokemon/Pokemon\";\nimport { connect } from \"react-redux\";\nimport { fetchPokemons, increasePokemonId } from \"../../redux/actions/fetchActions\";\nimport Col from \"react-bootstrap/col\";\nimport { Row, Container } from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport \"./styles.css\";\n\n//Pokemons lists\nconst PokemonList = (props) => {\n  //pokemons index, we go 20 at the time\n  let id = props.pokemons.index;\n\n  //load more pokemons as we scroll down\n  const loadMorePokemons = () => {\n    props.fetch(id);\n    props.nextPage();\n  };\n\n  //showing the comparing card alert if we are comparing\n  let cardAlertDisplay = props.modalController.isComparing ? \"\" : \"hidden\";\n\n  return (\n    <div>\n      {/* Check if we are comparing to render */}\n      {props.modalController.isComparing && (\n        <div className={`card-alert-container ${cardAlertDisplay}`}>\n          <div className=\"card\">\n            <div className=\"card-header--alert\">\n              <span>Comparing pokemon</span>\n            </div>\n            <div className=\"card-body--alert\">\n              <strong>\n                <span>{props.modalController.pokemonData.name}</span>\n              </strong>\n            </div>\n          </div>\n        </div>\n      )}\n      <Container className=\"pokemons-container\">\n        {/* POKEMONS IF IN A QUERY */}\n        {props.pokemons.queryPokemons !== null ? (\n          <Row>\n            {props.pokemons.queryPokemons.map((pokemon) => (\n              <Col xs={6} sm={3} md={3} lg={3} key={pokemon.id}>\n                <Pokemon data={pokemon} />\n              </Col>\n            ))}\n          </Row>\n        ) : (\n          /* POKEMONS IF NOT IN A QUERY */\n          /* infinite scroll to keep searching */\n          <InfiniteScroll\n            loadMore={loadMorePokemons}\n            hasMore={true || false}\n            loader={\n              <div className=\"loader\" key={0}>\n                Loading ...\n              </div>\n            }\n            initialLoad={false}\n            threshold={20}\n          >\n            <Row>\n              {props.pokemons.pokemons.map((pokemon) => (\n                <Col xs={6} sm={3} md={3} lg={2} key={pokemon.id}>\n                  <Pokemon data={pokemon} />\n                </Col>\n              ))}\n            </Row>\n          </InfiniteScroll>\n        )}\n      </Container>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetch: (id) => dispatch(fetchPokemons(id)),\n    nextPage: () => dispatch(increasePokemonId()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonList);\n","import { OPEN_MODAL, CLOSE_MODAL, COMPARE } from \"../actions/modalActions\";\n\nconst initialState = {\n  modalVisible: false,\n  pokemonData: null,\n  isComparing: false,\n  comparedPokemon: null,\n};\n/* OPEN AND CLOSE THE MODAL, SENDING POKEMON DATA DEPENDING OF WHICH ONE WAS SELECTED */\nfunction modalController(state = initialState, actions) {\n  switch (actions.type) {\n    case OPEN_MODAL:\n      return {\n        ...state,\n        modalVisible: true,\n        pokemonData: state.isComparing ? state.pokemonData : actions.payload.pokemonData,\n        comparedPokemon: state.isComparing ? actions.payload.comparedPokemon : null,\n      };\n    case CLOSE_MODAL:\n      return {\n        ...state,\n        modalVisible: false,\n        pokemonData: null,\n        comparedPokemon: null,\n        isComparing: false,\n      };\n    case COMPARE:\n      return {\n        ...state,\n        modalVisible: false,\n        isComparing: true,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default modalController;\n","import { FETCH_SUCCESS, FETCH_ERROR, QUERY_POKEMONS, CANCEL_QUERY, INCREASE_ID } from \"../actions/fetchActions\";\n\nconst initialState = {\n  pokemons: [],\n  queryPokemons: null,\n  isFetching: false,\n  error: null,\n  index: 0,\n};\n\n/* FETCH POKEMONS TO THE API */\nconst pokemons = (state = initialState, actions) => {\n  switch (actions.type) {\n    case FETCH_SUCCESS:\n      return {\n        ...state,\n        pokemons: [...state.pokemons, actions.payload.pokemon],\n        isFetching: false,\n      };\n    case INCREASE_ID:\n      return {\n        ...state,\n        index: state.index + 20,\n      };\n    case QUERY_POKEMONS:\n      return {\n        ...state,\n        queryPokemons: [...state.pokemons.filter((pokemon) => pokemon.name.includes(actions.payload.query))],\n      };\n    case CANCEL_QUERY:\n      return {\n        ...state,\n        pokemons: [...state.pokemons],\n        queryPokemons: null,\n      };\n    case FETCH_ERROR:\n      return {\n        ...state,\n        error: actions.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default pokemons;\n","import { combineReducers } from \"redux\";\nimport modalController from \"./modalReducer\";\nimport pokemons from \"./pokemonsReducer\";\n\n/* MIXING THE REDUCERS INTO ONE */\nexport default combineReducers({\n  modalController,\n  pokemons,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\n/* CREATING THE REDUX STORE TO BE USED BY THE COMPONENTS */\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from \"react\";\n\nimport Col from \"react-bootstrap/col\";\nimport { Row } from \"react-bootstrap\";\n\nimport \"./style.css\";\n\nexport const ModalBodyPokemon = ({ data }) => (\n  <Row>\n    <Col xs={4}>\n      <img className=\"body-img\" src={data.pokemonData.sprites.front_default} alt={data.pokemonData.name}></img>\n    </Col>\n    <Col xs={8} className=\"body-text-container\">\n      <div>\n        <Row>\n          <p className=\"body-description\">{data.pokemonData.description}</p>\n        </Row>\n        <hr />\n        <Row>\n          <Col className=\"body-text-container--item\">\n            <p className=\"body-title\">Height</p>\n            <p>{`${data.pokemonData.height}m`}</p>\n          </Col>\n          <Col className=\"body-text-container--item\">\n            <p className=\"body-title\">Weight</p>\n            <p>{`${data.pokemonData.weight}kg`}</p>\n          </Col>\n          <Col className=\"body-text-container--item\">\n            <p className=\"body-title\">Gender</p>\n            <p>{data.pokemonData.gender}</p>\n          </Col>\n        </Row>\n        <Row className=\"body-list-items\">\n          <Col className=\"body-text-container--item\">\n            <p className=\"body-title\">Abilities</p>\n            <section>\n              <ul className=\"body-text-container--item-list\">\n                {data.pokemonData.abilities.map((ability) => (\n                  <li key={ability.ability.name}>{ability.ability.name}</li>\n                ))}\n              </ul>\n            </section>\n          </Col>\n          <Col className=\"body-text-container--item\">\n            <p className=\"body-title\">Types</p>\n            <section>\n              <ul className=\"body-text-container--item-list\">\n                {data.pokemonData.types.map((type) => (\n                  <li key={type.type.name}>{type.type.name}</li>\n                ))}\n              </ul>\n            </section>\n          </Col>\n        </Row>\n      </div>\n    </Col>\n  </Row>\n);\n\nexport const ModalBodyComparing = ({ data }) => (\n  <div>\n    <Row>\n      <div className=\"body-comparing--img\">\n        <Col xs={6}>\n          <img src={data.pokemonData.sprites.front_default} alt={data.pokemonData.name}></img>\n        </Col>\n        <Col xs={6}>\n          <img src={data.comparedPokemon.sprites.front_default} alt={data.comparedPokemon.name}></img>\n        </Col>\n      </div>\n    </Row>\n    <Row>\n      <Col xs={12}>\n        <div className=\"body-comparing-texts--container\">\n          {/* HEIGHT */}\n          <hr />\n          <div className=\"body-comparing--description\">\n            <Col xs={4}>\n              <p>{`${data.pokemonData.height}m`}</p>\n            </Col>\n            <Col xs={4}>\n              <p className=\"body-title\">Height</p>\n            </Col>\n            <Col xs={4}>\n              <p>{`${data.comparedPokemon.height}m`}</p>\n            </Col>\n          </div>\n          {/* WEIGHT */}\n          <div className=\"body-comparing--description\">\n            <Col xs={4}>\n              <p>{`${data.pokemonData.weight}kg`}</p>\n            </Col>\n            <Col xs={4}>\n              <p className=\"body-title\">Weight</p>\n            </Col>\n            <Col xs={4}>\n              <p>{`${data.comparedPokemon.weight}kg`}</p>\n            </Col>\n          </div>\n          {/* GENDER */}\n          <div className=\"body-comparing--description\">\n            <Col xs={4}>\n              <p>Male</p>\n            </Col>\n            <Col xs={4}>\n              <p className=\"body-title\">Gender</p>\n            </Col>\n            <Col xs={4}>\n              <p>Female</p>\n            </Col>\n          </div>\n          {/* ABILITIES */}\n          <div className=\"body-comparing--description\">\n            <Col xs={4} className=\"body-comparing-list\">\n              <ul>\n                {data.pokemonData.abilities.map((ability) => (\n                  <li className=\"body-comparing-list--item\" key={ability.ability.name}>\n                    {ability.ability.name}\n                  </li>\n                ))}\n              </ul>\n            </Col>\n            <Col xs={4}>\n              <p className=\"body-title\">Abilities</p>\n            </Col>\n            <Col xs={4}>\n              <ul className=\"body-comparing-list\">\n                {data.comparedPokemon.abilities.map((ability) => (\n                  <li className=\"body-comparing-list--item\" key={ability.ability.name}>\n                    {ability.ability.name}\n                  </li>\n                ))}\n              </ul>\n            </Col>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  </div>\n);\n","import React from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport { XAxis, YAxis, BarChart, Bar } from \"recharts\";\n\nimport \"./style.css\";\n\nconst GraphsMaker = ({ data }) => {\n  const fistPokemonStats = data.pokemonData.stats.map((stat) => stat.base_stat);\n  const comparedStats = data.comparedPokemon ? data.comparedPokemon.stats.map((stat) => stat.base_stat) : null;\n  let dataSet;\n\n  if (comparedStats !== null) {\n    dataSet = [\n      { name: \"hp\", pokemonData: fistPokemonStats[0], comparedPokemon: comparedStats[0] },\n      { name: \"attack\", pokemonData: fistPokemonStats[1], comparedPokemon: comparedStats[1] },\n      { name: \"\", pokemonData: fistPokemonStats[2], comparedPokemon: comparedStats[2] },\n      { name: \"special\", pokemonData: fistPokemonStats[3], comparedPokemon: comparedStats[3] },\n      { name: \"\", pokemonData: fistPokemonStats[4], comparedPokemon: comparedStats[4] },\n      { name: \"speed\", pokemonData: fistPokemonStats[5], comparedPokemon: comparedStats[5] },\n    ];\n  } else {\n    dataSet = [\n      { name: \"hp\", pokemonData: fistPokemonStats[0] },\n      { name: \"attack\", pokemonData: fistPokemonStats[1] },\n      { name: \"\", pokemonData: fistPokemonStats[2] },\n      { name: \"special\", pokemonData: fistPokemonStats[3] },\n      { name: \"\", pokemonData: fistPokemonStats[4] },\n      { name: \"speed\", pokemonData: fistPokemonStats[5] },\n    ];\n  }\n\n  return (\n    <BarChart\n      width={350}\n      height={200}\n      data={dataSet}\n      margin={{ top: 0, right: 25, bottom: 0, left: 0 }}\n      className=\"stats-chart\"\n    >\n      <Bar dataKey=\"pokemonData\" barSize={35} fill=\"#096700\" />\n\n      {comparedStats !== null && <Bar dataKey=\"comparedPokemon\" barSize={35} fill=\"#12d400\" />}\n\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n    </BarChart>\n  );\n};\n\nconst ModalPokemonFooter = ({ data }) => (\n  <div>\n    <Row className=\"row-footer\">\n      <h4 className=\"footer-title\">Stats</h4>\n    </Row>\n    <Row className=\"row-footer\">\n      <GraphsMaker data={data} />\n    </Row>\n  </div>\n);\n\nexport default ModalPokemonFooter;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { closeModal, compare } from \"../../../redux/actions/modalActions\";\n\nimport \"./style.css\";\n\nconst ModalHeaderPokemon = ({ props }) => {\n  const data = props.modalController;\n\n  const handleCloseModal = () => {\n    props.closeModal();\n  };\n\n  //Closing the modal and setting a compare variable in the store\n  const handleCompare = () => {\n    props.comparePokemons();\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"header--texts\">\n        <h6 className=\"header-texts--name\">{data.pokemonData.name}</h6>\n        <button onClick={handleCompare} className=\"header-texts--compare\">\n          Compare To...\n        </button>\n      </div>\n      <button onClick={handleCloseModal} className=\"header--close\">\n        X\n      </button>\n    </div>\n  );\n};\n\nconst ModalHeaderComparing = ({ props }) => {\n  const data = props.modalController;\n\n  const handleCloseModal = () => {\n    props.closeModal();\n  };\n\n  return (\n    <div className=\"header\">\n      <div className=\"header--texts\">\n        <h6 className=\"header-texts--name\">{data.pokemonData.name} VS.</h6>\n        <h6 className=\"header-texts--name\">{data.comparedPokemon.name}</h6>\n      </div>\n      <button onClick={handleCloseModal} className=\"header--close\">\n        X\n      </button>\n    </div>\n  );\n};\n\nconst ModalHeader = (props) => (\n  <div>\n    {!props.modalController.isComparing ? <ModalHeaderPokemon props={props} /> : <ModalHeaderComparing props={props} />}\n  </div>\n);\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    closeModal: (pokemonData) => dispatch(closeModal(pokemonData)),\n    comparePokemons: () => dispatch(compare()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalHeader);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect } from \"react-redux\";\nimport { Row } from \"react-bootstrap\";\nimport { ModalBodyPokemon, ModalBodyComparing } from \"./modal-body/ModalBody\";\nimport ModalFooter from \"./modal-footer\";\nimport ModalHeader from \"./modal-header\";\n\nimport \"./style.css\";\n\nconst PokemonModal = (props) => {\n  if (!props.modalController.modalVisible) {\n    return null;\n  } else\n    return ReactDOM.createPortal(\n      <div className=\"root-modal\">\n        <ModalHeader />\n        <hr />\n\n        <Row>\n          <div className=\"body\">\n            {!props.modalController.isComparing ? (\n              <ModalBodyPokemon data={props.modalController} />\n            ) : (\n              <ModalBodyComparing data={props.modalController} />\n            )}\n\n            <hr />\n          </div>\n        </Row>\n\n        <Row>\n          <div className=\"footer\">\n            <ModalFooter data={props.modalController} />\n          </div>\n        </Row>\n      </div>,\n      document.getElementById(\"modal-root\")\n    );\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nexport default connect(mapStateToProps)(PokemonModal);\n","import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\n\nconst UseOverlay = (props) => {\n  const [overlayState, setOverlayState] = useState(\"hidden\");\n\n  useEffect(() => {\n    if (props.modalController.modalVisible) {\n      setOverlayState(\"open\");\n    } else {\n      setOverlayState(\"hidden\");\n    }\n\n    return () => {};\n  }, [props.modalController.modalVisible]);\n\n  return <div className={`overlay ${overlayState}`}></div>;\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UseOverlay);\n","import React from \"react\";\nimport \"./App.css\";\nimport Banner from \"./components/banner\";\nimport NavBar from \"./components/navBar\";\nimport PokemonList from \"./components/pokemons-list\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport PokemonModal from \"./components/pokemon-modal/PokemonModal\";\nimport UseOverlay from \"./components/overlay\";\n\n/* MAIN APP */\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <UseOverlay />\n        <Banner />\n        <NavBar />\n        <PokemonModal />\n        <PokemonList />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"banner_banner__-R6DW\",\"title\":\"banner_title__3brMb\"};"],"sourceRoot":""}